C51 COMPILER V9.01   MAIN                                                                  06/05/2012 15:05:52 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE Source\main.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(main
                    -.obj)

line level    source

   1          #include "includes.h"
   2          
   3          sbit LED=P2^4;
   4          sbit LED1=P2^5;
   5          
   6          unsigned char  code Duan[]={0x3F, 0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x38};
   7          //共阴极数码管，0-9段码表
   8          
   9            unsigned char  Data_Buffer[4]={0,0,0,0};
  10          //四个数码管显示数值，数组变量定义
  11          
  12           unsigned char Min=0,Sec=0;//实时时间
  13          sbit P10=P1^0;          //四个数码管的位码口定义
  14          sbit P11=P1^1;
  15          sbit P12=P1^2;
  16          sbit P13=P1^3;
  17          
  18           xdata KS_STACK TaskStartStk[MaxStkSize+1];
  19           xdata KS_STACK TaskStartStk1[MaxStkSize+1];
  20          extern void InitHardware() reentrant;
  21          
  22           unsigned char t = 0;
  23          void clock1(void) reentrant
  24          {
  25   1      static unsigned char Bit=0;     //静态变量，退出程序后，值保留
  26   1      static unsigned char count=0;
  27   1      
  28   1      EA =0;
  29   1       count++;
  30   1       if(count>=200) //秒计时，定时器定时5ms,计200次为一秒
  31   1       {
  32   2       LED1=~LED1;
  33   2         count=0;
  34   2         Sec++;
  35   2         if(Sec>=60)
  36   2         {
  37   3                   Sec=0;     
  38   3                       Min++;                 //更新数码管显示
  39   3                       if(Min>=60)    //时间计时
  40   3                      {
  41   4                              Min=0;    
  42   4                      }
  43   3         }
  44   2       }
  45   1                       
  46   1       Bit++; 
  47   1       if(Bit>=4)Bit=0;
  48   1       P1|=0x0f;                                      //先关位码
  49   1       P0=Duan[Data_Buffer[Bit]];     //开段码
  50   1       if(count<100&&Bit==1)P0|=0x80;//0.5S中间小数点亮，之后灭，不断循环
  51   1       switch(Bit)                            //送位码
  52   1       {
  53   2        case 0: P10=0;break;
  54   2        case 1: P11=0;break;
C51 COMPILER V9.01   MAIN                                                                  06/05/2012 15:05:52 PAGE 2   

  55   2        case 2: P12=0;break;
  56   2        case 3: P13=0;break;
  57   2       }
  58   1       EA = 1;
  59   1      }
  60          
  61             sbit LED3 = P2^6;
  62          void Task(void *ppdata)  reentrant
  63          {
  64   1              ppdata=ppdata;
  65   1              for(;;)
  66   1              {
  67   2                        KS_ENTER_CRITICAL();          
  68   2                        Data_Buffer[0]=Min/10;
  69   2                        Data_Buffer[1]=Min%10;                
  70   2                        Data_Buffer[2]=Sec/10;                
  71   2                        Data_Buffer[3]=Sec%10;
  72   2                        if(Data_Buffer[1] == 0) LED3 = ~LED3;
  73   2                        KS_EXIT_CRITICAL();
  74   2              ks_thread_delay(40);
  75   2              }    
  76   1      }
  77          sbit KEY_UP = P2^1;
  78          sbit KEY_DOWN = P2^2;
  79          
  80          
  81          void Task1(void *ppdata) reentrant
  82          {
  83   1              ppdata=ppdata;
  84   1              for(;;)
  85   1              {
  86   2                      LED=~LED;
  87   2                      if(KEY_UP == 0){ 
  88   3                       Sec ++;
  89   3                       if(Sec >= 60){
  90   4                       Sec = 0;
  91   4                       Min++; 
  92   4                       }
  93   3                       if(Min>=60)    //时间计时
  94   3                      {
  95   4                              Min=0;    
  96   4                      }
  97   3                        Data_Buffer[0]=Min/10;
  98   3                        Data_Buffer[1]=Min%10;                
  99   3                        Data_Buffer[2]=Sec/10;                
 100   3                        Data_Buffer[3]=Sec%10;
 101   3                       }
 102   2                      if(KEY_DOWN == 0){
 103   3                       if(Sec != 0){
 104   4                              Sec--;
 105   4                        }
 106   3                        else if(Sec == 0)
 107   3                        {
 108   4                        if(Min != 0){
 109   5                         Min--;
 110   5                         Sec = 59;
 111   5                         }
 112   4                        }
 113   3                        Data_Buffer[0]=Min/10;
 114   3                        Data_Buffer[1]=Min%10;                
 115   3                        Data_Buffer[2]=Sec/10;                
 116   3                        Data_Buffer[3]=Sec%10;
C51 COMPILER V9.01   MAIN                                                                  06/05/2012 15:05:52 PAGE 3   

 117   3                       }
 118   2              
 119   2              ks_thread_delay(10);
 120   2              }    
 121   1      }
 122          
 123           void timer1_init(void) reentrant
 124          { 
 125   1              TMOD = 0x11;
 126   1          TH1 = 0x0EC;
 127   1          TL1 = 0x78;
 128   1          ET1 = 1;
 129   1          TR1 = 1;
 130   1      }
 131           void timer1() interrupt 3 //定时器1中断用来产生2秒时间定时
 132          {
 133   1          ks_int_enter();                           
 134   1              TH1 = 0x0EC;
 135   1          TL1 = 0x78;
 136   1          clock1();
 137   1              ks_int_exit();  
 138   1      }
 139          
 140          void main(void)
 141          {       
 142   1              ks_system_initialize();
 143   1              InitHardware(); 
 144   1              timer1_init();  
 145   1              ks_thread_create(Task,NULL,(void*)0,&TaskStartStk[0],0);
 146   1              ks_thread_create(Task1,NULL,(void*)0,&TaskStartStk1[0],1);
 147   1              ks_start();
 148   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    681    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =    541    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
